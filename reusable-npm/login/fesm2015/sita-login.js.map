{"version":3,"file":"sita-login.js.map","sources":["ng://@sita/login/lib/login.component.ts","ng://@sita/login/lib/material.module.ts","ng://@sita/login/lib/configurable/input/input.component.ts","ng://@sita/login/lib/configurable/button/button.component.ts","ng://@sita/login/lib/configurable/select/select.component.ts","ng://@sita/login/lib/configurable/date/date.component.ts","ng://@sita/login/lib/configurable/radiobutton/radiobutton.component.ts","ng://@sita/login/lib/configurable/checkbox/checkbox.component.ts","ng://@sita/login/lib/configurable/toggle-switch/toggle-switch.component.ts","ng://@sita/login/lib/configurable/dynamic-field/dynamic-field.directive.ts","ng://@sita/login/lib/login.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn } from '@angular/forms';\nimport { FieldConfig } from \"./field.interface\";\n\n\n@Component({\n  selector: 'sita-login',\n  template: `<div [ngStyle]='{ \"background-image\": loginBgImage}' fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1.5rem\" class=\"mat-typography\">\n  <div>\n    <h1 fxLayoutAlign=\"center\"> {{title}} </h1>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\n      <div class=\"language-selector\">\n        <ng-content select=\"[login-lang]\"></ng-content>\n      </div>\n    </div>\n  </div>\n  <div class=\"login-container\" fxLayout=\"row\" fxLayoutAlign=\"center\">    \n    <mat-card fxFlex=\"90%\" fxFlex.sm=\"66%\" fxFlex.md=\"50%\" fxFlex.gt-md=\"33%\" class=\"login-box\">\n      <label class=\"login-error\" *ngIf=\"loginError\"> {{loginError}} </label>\n      <form (ngSubmit)=\"onSubmit($event)\" [formGroup]=\"loginForm\" novalidate>\n          <ng-container *ngFor=\"let field of fields;\" >\n              <ng-container *ngIf=\"switch && field.name !== 'username' && field.name !== 'password'\" dynamicField [field]=\"field\" [group]=\"loginForm\">\n\n              </ng-container>\n              <ng-container *ngIf=\"!switch\" dynamicField [field]=\"field\" [group]=\"loginForm\">\n\n              </ng-container>\n          </ng-container>\n      </form>\n    </mat-card>\n  </div>\n</div>\n\n`,\n  styles: [`:host{display:flex;flex:1;background-color:#f5f5f5}.inline-loader{display:inline-block}.version{margin:0}.login-container,.mat-form-field{width:100%}.login-error{color:red;text-align:center;width:100%}`]\n})\nexport class LoginComponent implements OnInit, OnChanges {\n  \n  loginForm: FormGroup;\n  @Input() fields: FieldConfig[] = [];\n  @Input() title: string;\n  @Input() loginError: string;\n  @Input() loginBgImage: string;\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\n\n  switch: boolean;\n  constructor(private fb: FormBuilder) {\n    \n  }\n  ngOnChanges(c: any) {\n    console.log(c);\n  }\n  ngOnInit() { \n    if (typeof this.fields === 'string') {\n      // REACT COMPAT FIX: try to convert string back to array\n      this.fields = JSON.parse(this.fields);\n    }\n\n    // default validation for email\n    const email = this.fields.find(r => r.name === 'email');\n    if (email && !email.validations) {\n      email.validations = [\n        {\n          name: \"required\",\n          validator: Validators.required,\n          message: \"Email Required\"\n        },\n        {\n          name: \"pattern\",\n          validator: Validators.pattern(\n            \"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\"\n          ),\n          message: \"Invalid email\"\n        }\n      ];\n    }\n\n    // default validation for username\n    const username = this.fields.find(r => r.name === 'username');\n    if (username && !username.validations) {\n      username.validations = [\n        {\n          name: \"required\",\n          validator: Validators.required,\n          message: \"Name Required\"\n        },\n        {\n          name: \"pattern\",\n          validator: Validators.pattern(\"^[a-zA-Z]+$\"),\n          message: \"Accept only text\"\n        }\n      ];\n    }\n    // default validation for password\n    const password = this.fields.find(r => r.name === 'password');\n    if (password && !password.validations) {\n      password.validations = [\n        {\n          name: \"required\",\n          validator: Validators.required,\n          message: \"Password Required\"\n        }\n      ];\n    }\n    // default validation for date of birth\n    const dob = this.fields.find(r => r.name === 'dob');\n    if (dob && !dob.validations) {\n      dob.validations = [\n        {\n          name: \"required\",\n          validator: Validators.required,\n          message: \"Date of Birth Required\"\n        }\n      ];\n    }\n    this.loginForm = this.createControl();\n    \n    const theWitchName = this.fields.find( r => r.name === 'ldap');   \n    this.loginForm.valueChanges.subscribe(r => {\n      if (theWitchName) {\n        this.switch = this.loginForm.get(theWitchName.name).value;\n      } \n    });\n  }\n\n  onSubmit(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.loginForm.valid) {\n      this.submit.emit(this.loginForm.value);\n    } else {\n      this.validateAllFormFields(this.loginForm);\n    }\n  }\n\n  createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        field.value,\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name, control);\n    });\n    return group;\n  }\n\n  bindValidations(validations: any): ValidatorFn {\n    if (validations.length > 0) {\n      const validList = function *(array: any[]) {\n        for (var item of array) {\n            yield item.validator;\n        }\n      };\n      return Validators.compose(Array.from(validList(validations)));\n    }\n    return null;\n  }\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  }\n}\n","/*\n * This module imports and re-exports all Angular Material modules for convenience,\n * so only 1 module import is needed in your feature modules.\n * See https://material.angular.io/guide/getting-started#step-3-import-the-component-modules.\n *\n * To optimize your production builds, you should only import the components used in your app.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLineModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatPseudoCheckboxModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatCommonModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatLineModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPseudoCheckboxModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\n@Component({\n  selector: \"app-input\",\n  template: `\n<mat-form-field style=\"display:block\" [formGroup]=\"group\">\n  <input matInput [formControlName]=\"field.name\" [placeholder]=\"field.label\" [type]=\"field.inputType\">\n  <ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\n    <mat-error *ngIf=\"group.get(field.name).hasError(validation.name)\">{{validation.message}}</mat-error>\n  </ng-container>\n</mat-form-field>\n`,\n  styles: []\n})\nexport class InputComponent implements OnInit {\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\n@Component({\n  selector: \"app-button\",\n  template: `\n<div [formGroup]=\"group\" [ngStyle]=\"{'text-align': field.textAlign}\">\n  <button type=\"submit\" mat-raised-button color=\"primary\">{{field.label}}</button>\n</div>\n`,\n  styles: []\n})\nexport class ButtonComponent implements OnInit {\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\n@Component({\n  selector: \"app-select\",\n  template: `\n<mat-form-field style=\"display:block\" [formGroup]=\"group\">\n  <mat-select [placeholder]=\"field.label\" [formControlName]=\"field.name\">\n    <mat-option *ngFor=\"let item of field.options\" [value]=\"item\">{{item}}</mat-option>\n  </mat-select>\n</mat-form-field>\n`,\n  styles: []\n})\nexport class SelectComponent implements OnInit {\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\n@Component({\n  selector: \"app-date\",\n  template: `\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\n<input matInput [matDatepicker]=\"picker\" [formControlName]=\"field.name\" [placeholder]=\"field.label\">\n<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n<mat-datepicker #picker></mat-datepicker>\n<mat-hint></mat-hint>\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\n<mat-error *ngIf=\"group.get(field.name).hasError(validation.name)\">{{validation.message}}</mat-error>\n</ng-container>\n</mat-form-field>\n`,\n  styles: []\n})\nexport class DateComponent implements OnInit {\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\n@Component({\n  selector: \"app-radiobutton\",\n  template: `\n<div class=\"demo-full-width margin-top\" [formGroup]=\"group\">\n<label class=\"radio-label-padding\">{{field.label}}:</label>\n<mat-radio-group [formControlName]=\"field.name\">\n<mat-radio-button *ngFor=\"let item of field.options\" [value]=\"item\">{{item}}</mat-radio-button>\n</mat-radio-group>\n</div>\n`,\n  styles: []\n})\nexport class RadiobuttonComponent implements OnInit {\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\n@Component({\n  selector: \"app-checkbox\",\n  template: `\n<div [formGroup]=\"group\" >\n<mat-checkbox [formControlName]=\"field.name\">{{field.label}}</mat-checkbox>\n</div>\n`,\n  styles: []\n})\nexport class CheckboxComponent implements OnInit {\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, Input, Output, EventEmitter, forwardRef, OnChanges } from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\n\n@Component({\n  selector: 'app-toggle-switch',\n  template: `<div [formGroup]=\"group\" [ngStyle]=\"{'text-align': field.textAlign}\">\n    <label class=\"ldap-container\">\n        <span class=\"ldap-text\"> {{field.label}} </span>\n    </label>\n    <label class=\"bs-switch\">\n        <input type=\"checkbox\" [formControlName]=\"field.name\" />\n        <span class=\"slider round\"></span>\n    </label>\n</div>`,\n  styles: [`.bs-switch{position:relative;display:inline-block;width:60px;height:34px}.bs-switch input{display:none}.bs-switch input:checked+.slider{background-color:#2196f3}.bs-switch input:checked+.slider:before{-webkit-transform:translateX(26px);transform:translateX(26px)}.bs-switch .slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.bs-switch .slider:before{position:absolute;content:\"\";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}.bs-switch .slider.round{border-radius:34px}.bs-switch .slider.round:before{border-radius:50%}[type=checkbox]:checked,[type=checkbox]:not(:checked),mat-checkbox:checked,mat-checkbox:not(:checked){position:absolute;opacity:0;pointer-events:none}.ldap-text{position:absolute;right:0;bottom:0}.ldap-container{position:relative;display:inline-block;width:100px;height:34px}`]\n})\nexport class ToggleSwitchComponent {\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnInit,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"../../field.interface\";\nimport { InputComponent } from \"../input/input.component\";\nimport { ButtonComponent } from \"../button/button.component\";\nimport { SelectComponent } from \"../select/select.component\";\nimport { DateComponent } from \"../date/date.component\";\nimport { RadiobuttonComponent } from \"../radiobutton/radiobutton.component\";\nimport { CheckboxComponent } from \"../checkbox/checkbox.component\";\nimport { ToggleSwitchComponent } from '../toggle-switch/toggle-switch.component';\n\nconst componentMapper = {\n  input: InputComponent,\n  button: ButtonComponent,\n  select: SelectComponent,\n  date: DateComponent,\n  radiobutton: RadiobuttonComponent,\n  checkbox: CheckboxComponent,\n  switch: ToggleSwitchComponent\n};\n@Directive({\n  selector: \"[dynamicField]\"\n})\nexport class DynamicFieldDirective implements OnInit {\n  @Input() field: FieldConfig;\n  @Input() group: FormGroup;\n  componentRef: any;\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef\n  ) {}\n  ngOnInit() {\n    const factory = this.resolver.resolveComponentFactory(\n      componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from './material.module';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LoginComponent } from './login.component';\nimport { DynamicFieldDirective } from './configurable/dynamic-field/dynamic-field.directive';\n\nimport { InputComponent } from \"./configurable/input/input.component\";\nimport { ButtonComponent } from \"./configurable/button/button.component\";\nimport { SelectComponent } from \"./configurable/select/select.component\";\nimport { DateComponent } from \"./configurable/date/date.component\";\nimport { RadiobuttonComponent } from \"./configurable/radiobutton/radiobutton.component\";\nimport { CheckboxComponent } from \"./configurable/checkbox/checkbox.component\";\nimport { ToggleSwitchComponent } from \"./configurable/toggle-switch/toggle-switch.component\";\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MaterialModule\n  ],\n  declarations: [\n    LoginComponent,\n    DynamicFieldDirective,\n    InputComponent,\n    ButtonComponent,\n    SelectComponent,\n    DateComponent,\n    RadiobuttonComponent,\n    CheckboxComponent,\n    ToggleSwitchComponent\n  ],\n  entryComponents: [\n    InputComponent,\n    ButtonComponent,\n    SelectComponent,\n    DateComponent,\n    RadiobuttonComponent,\n    CheckboxComponent,\n    ToggleSwitchComponent\n  ],\n  exports: [LoginComponent]\n\n})\nexport class LoginModule { }\n"],"names":[],"mappings":"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"}
